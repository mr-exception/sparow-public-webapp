[{"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/index.tsx":"1","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/store/store.ts":"2","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/Routes.tsx":"3","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/store/reduser.ts":"4","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/Login/Login.tsx":"5","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/Register/Register.tsx":"6","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/Layout/Layout.tsx":"7","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/ResetPassword/ResetPassword.tsx":"8","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/store/actions.ts":"9","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/profile/Profile.ts":"10","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/Sparow.ts":"11","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/Main/Main.tsx":"12","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/ResetPassword/SendStep.tsx":"13","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/ResetPassword/ChangePasswordStep.tsx":"14","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/ResetPassword/VerifyEmailState.tsx":"15","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/ResetPassword/VerifyPhoneStep.tsx":"16","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/Layout/components/NavBar.tsx":"17","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/BreadCrumb/BreadCrumb.tsx":"18","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/logout.ts":"19","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/login.ts":"20","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/register.ts":"21","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/profile/updateProfile.ts":"22","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/profile/getProfile.ts":"23","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/socket-handlers/profile.ts":"24","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/applications/search.ts":"25","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/applications/create.ts":"26","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/applications/edit.ts":"27","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/applications/delete.ts":"28","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/sessions/removeAll.ts":"29","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/sessions/remove.ts":"30","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/sessions/all.ts":"31","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/errors/api-validation.ts":"32","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/errors/auth.ts":"33","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/Card.tsx":"34","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/Col.tsx":"35","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/Space.tsx":"36","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/Row.tsx":"37","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/Link.tsx":"38","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/Wrapper.tsx":"39","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/Button/Botton.tsx":"40","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/TextInput/TextInput.tsx":"41","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/ResetPassword/FinishStep.tsx":"42","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/Main/Components/UploadProfileModal/UpdateProfileModal.tsx":"43","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/Layout/components/MobileMenu.tsx":"44","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/errors/not-found.ts":"45","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/utils.ts":"46","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/errors/network.ts":"47","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/profile/AuthProfile.ts":"48","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/applications/Application.ts":"49","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/sessions/Session.ts":"50","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/Avatar/Avatar.tsx":"51","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/Layout/components/Menubar.tsx":"52","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/DropDown/DropDown.tsx":"53","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/CheckInput.tsx":"54","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/Modal/ModalHeader.tsx":"55","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/Modal/Modal.tsx":"56","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/Modal/ModalBody.tsx":"57","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/Modal/ModalFooter.tsx":"58","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/ImageInput/ImageInput.tsx":"59","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/ImageInput/ImageUrlPreview.tsx":"60","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/ImageInput/ImageCrop.tsx":"61","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/Sessions/Sessions.tsx":"62","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/Table/Table.tsx":"63","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/Sessions/components/LoadingView/LoadingView.tsx":"64","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/Sessions/components/TableView/TableView.tsx":"65","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/Image/Image.tsx":"66","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/Pagination/Pagination.tsx":"67"},{"size":348,"mtime":1618652173620,"results":"68","hashOfConfig":"69"},{"size":383,"mtime":1617990526241,"results":"70","hashOfConfig":"69"},{"size":3201,"mtime":1618737628387,"results":"71","hashOfConfig":"69"},{"size":1149,"mtime":1618695676488,"results":"72","hashOfConfig":"69"},{"size":6261,"mtime":1618684799483,"results":"73","hashOfConfig":"69"},{"size":6004,"mtime":1618684806539,"results":"74","hashOfConfig":"69"},{"size":557,"mtime":1617920664161,"results":"75","hashOfConfig":"69"},{"size":3638,"mtime":1618684825813,"results":"76","hashOfConfig":"69"},{"size":929,"mtime":1618695707965,"results":"77","hashOfConfig":"69"},{"size":2209,"mtime":1618737633971,"results":"78","hashOfConfig":"69"},{"size":4165,"mtime":1618687405296,"results":"79","hashOfConfig":"69"},{"size":3099,"mtime":1618652537111,"results":"80","hashOfConfig":"69"},{"size":2453,"mtime":1617995708908,"results":"81","hashOfConfig":"69"},{"size":2304,"mtime":1617995095917,"results":"82","hashOfConfig":"69"},{"size":653,"mtime":1614549592043,"results":"83","hashOfConfig":"69"},{"size":1749,"mtime":1617995116729,"results":"84","hashOfConfig":"69"},{"size":2299,"mtime":1618737697436,"results":"85","hashOfConfig":"69"},{"size":975,"mtime":1617921468043,"results":"86","hashOfConfig":"69"},{"size":713,"mtime":1617828746177,"results":"87","hashOfConfig":"69"},{"size":1388,"mtime":1618375346759,"results":"88","hashOfConfig":"69"},{"size":1410,"mtime":1618375306269,"results":"89","hashOfConfig":"69"},{"size":1437,"mtime":1618424214622,"results":"90","hashOfConfig":"69"},{"size":707,"mtime":1618737609171,"results":"91","hashOfConfig":"69"},{"size":506,"mtime":1618375400426,"results":"92","hashOfConfig":"69"},{"size":1046,"mtime":1617828746821,"results":"93","hashOfConfig":"69"},{"size":986,"mtime":1617828746821,"results":"94","hashOfConfig":"69"},{"size":1000,"mtime":1617828746821,"results":"95","hashOfConfig":"69"},{"size":635,"mtime":1617828746821,"results":"96","hashOfConfig":"69"},{"size":634,"mtime":1617828739877,"results":"97","hashOfConfig":"69"},{"size":638,"mtime":1618375115354,"results":"98","hashOfConfig":"69"},{"size":1047,"mtime":1618687384200,"results":"99","hashOfConfig":"69"},{"size":577,"mtime":1617882223857,"results":"100","hashOfConfig":"69"},{"size":531,"mtime":1617882146966,"results":"101","hashOfConfig":"69"},{"size":784,"mtime":1618684486485,"results":"102","hashOfConfig":"69"},{"size":1494,"mtime":1614549592043,"results":"103","hashOfConfig":"69"},{"size":244,"mtime":1617882768737,"results":"104","hashOfConfig":"69"},{"size":1347,"mtime":1614549592043,"results":"105","hashOfConfig":"69"},{"size":410,"mtime":1614549592043,"results":"106","hashOfConfig":"69"},{"size":361,"mtime":1614549592043,"results":"107","hashOfConfig":"69"},{"size":829,"mtime":1618377581139,"results":"108","hashOfConfig":"69"},{"size":3417,"mtime":1614549592043,"results":"109","hashOfConfig":"69"},{"size":1008,"mtime":1617995121785,"results":"110","hashOfConfig":"69"},{"size":8820,"mtime":1618524341591,"results":"111","hashOfConfig":"69"},{"size":1705,"mtime":1618652713940,"results":"112","hashOfConfig":"69"},{"size":475,"mtime":1617882075952,"results":"113","hashOfConfig":"69"},{"size":139,"mtime":1618140942740,"results":"114","hashOfConfig":"69"},{"size":361,"mtime":1617882116965,"results":"115","hashOfConfig":"69"},{"size":352,"mtime":1618375368368,"results":"116","hashOfConfig":"69"},{"size":1263,"mtime":1617828737893,"results":"117","hashOfConfig":"69"},{"size":1007,"mtime":1618688966917,"results":"118","hashOfConfig":"69"},{"size":911,"mtime":1618684614203,"results":"119","hashOfConfig":"69"},{"size":258,"mtime":1617883377439,"results":"120","hashOfConfig":"69"},{"size":2011,"mtime":1618653229546,"results":"121","hashOfConfig":"69"},{"size":714,"mtime":1614549592043,"results":"122","hashOfConfig":"69"},{"size":437,"mtime":1618293000812,"results":"123","hashOfConfig":"69"},{"size":534,"mtime":1618647583087,"results":"124","hashOfConfig":"69"},{"size":306,"mtime":1618293008444,"results":"125","hashOfConfig":"69"},{"size":316,"mtime":1618293017108,"results":"126","hashOfConfig":"69"},{"size":1150,"mtime":1618435619317,"results":"127","hashOfConfig":"69"},{"size":1138,"mtime":1618684662188,"results":"128","hashOfConfig":"69"},{"size":5040,"mtime":1618684635669,"results":"129","hashOfConfig":"69"},{"size":2428,"mtime":1618697654782,"results":"130","hashOfConfig":"69"},{"size":890,"mtime":1618683647076,"results":"131","hashOfConfig":"69"},{"size":268,"mtime":1618683879917,"results":"132","hashOfConfig":"69"},{"size":4588,"mtime":1618697550650,"results":"133","hashOfConfig":"69"},{"size":278,"mtime":1618684738430,"results":"134","hashOfConfig":"69"},{"size":2352,"mtime":1618697867114,"results":"135","hashOfConfig":"69"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"6ke7va",{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"138"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"138"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"138"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"138"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"138"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"138"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"138"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"138"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/index.tsx",[],[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/store/store.ts",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/Routes.tsx",["279"],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/store/reduser.ts",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/Login/Login.tsx",["280"],"import React, { useState } from \"react\";\nimport Button from \"ui-kit/Button/Botton\";\nimport { Card, CardHeader, CardBody, CardFooter } from \"ui-kit/Card\";\nimport Col from \"ui-kit/Col\";\nimport Image from \"ui-kit/Image/Image\";\nimport Row from \"ui-kit/Row\";\nimport Space from \"ui-kit/Space\";\nimport TextInput from \"ui-kit/TextInput/TextInput\";\nimport Link from \"ui-kit/Link\";\nimport Styles from \"./Login.module.scss\";\nimport { ApiValidationError } from \"api/errors/api-validation\";\nimport { AuthError } from \"api/errors/auth\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { IAction, IInitializedState } from \"types/storeActions\";\nimport { storeUser } from \"store/actions\";\nimport AuthProfile from \"api/profile/AuthProfile\";\nconst Component: React.FC = () => {\n  const [username, set_username] = useState<string>(\"\");\n  const [password, set_password] = useState<string>(\"\");\n  const [errors, set_errors] = useState<{ [key: string]: string[] }>({});\n  const [loading, set_loading] = useState<boolean>(false);\n\n  const [login_failed, set_login_failed] = useState<boolean>(false);\n  const sparow = useSelector((state: IInitializedState) => state.sparow);\n\n  const dispatch = useDispatch();\n\n  const submit = async () => {\n    set_errors({});\n    set_login_failed(false);\n    try {\n      set_loading(true);\n      const result: AuthProfile = await sparow.login({\n        username,\n        password,\n        scopes: [\"applications\"],\n      });\n\n      localStorage.setItem(\"user\", JSON.stringify(result.jsonObject()));\n      localStorage.setItem(\"auth_token\", result.access_token);\n      localStorage.setItem(\"expires_at\", result.expires_at.toString());\n\n      dispatch(storeUser(result));\n      set_loading(false);\n    } catch (error) {\n      set_loading(false);\n      if (error instanceof ApiValidationError) {\n        set_errors(error.errors);\n      }\n      if (error instanceof AuthError) {\n        set_login_failed(true);\n      }\n    }\n  };\n  return (\n    <Row align=\"center\" verticalAlign=\"center\">\n      <Col lg={4} md={6} sm={8} xs={12}>\n        <Space height=\"45px\" />\n        <Card>\n          {/* start of card header */}\n          <CardHeader>\n            <Row align=\"center\">\n              <Col col={12}>\n                <Image\n                  source=\"/assets/sparrow-logo.png\"\n                  alt=\"logo\"\n                  className={Styles.logoImage}\n                />\n              </Col>\n              <Col col={12} className={Styles.logoText}>\n                sparow\n              </Col>\n              <Col col={12} className={Styles.descriptionText}>\n                login to access your information\n              </Col>\n            </Row>\n          </CardHeader>\n          {/* end of card header */}\n\n          {/* start of card body */}\n          <CardBody>\n            <Row align=\"start\">\n              {login_failed ? (\n                <Col col={12} className={Styles.authError}>\n                  incorrect username and password\n                </Col>\n              ) : null}\n              <Col col={12}>\n                <TextInput\n                  value={username}\n                  onChange={set_username}\n                  label=\"Username\"\n                  type=\"text\"\n                  errors={errors?.username}\n                />\n              </Col>\n              <Col col={12}>\n                <TextInput\n                  value={password}\n                  onChange={set_password}\n                  label=\"Password\"\n                  // icon={<FaLock />}\n                  type=\"password\"\n                  errors={errors?.password}\n                />\n                <br />\n                <Link\n                  style={{\n                    fontSize: 12,\n                    color: \"#8a8989\",\n                  }}\n                  url={\"https://google.com\"}\n                >\n                  forget password?\n                </Link>\n              </Col>\n              <Col className={Styles.mt25} col={12}>\n                <Button fullWidth={true} onClick={submit} loading={loading}>\n                  Login\n                </Button>\n              </Col>\n              <Col\n                col={12}\n                className={\n                  Styles.descriptionText +\n                  \" \" +\n                  Styles.text14 +\n                  \" \" +\n                  Styles.textCenter\n                }\n              >\n                Not a Member?{\" \"}\n                <Link\n                  style={{\n                    fontWeight: \"bold\",\n                  }}\n                  url=\"/register\"\n                >\n                  Create an Account\n                </Link>\n              </Col>\n            </Row>\n          </CardBody>\n          {/* end of card body */}\n          {/* start of card footer */}\n          <CardFooter>\n            <Row align=\"center\">\n              <Col\n                lg={8}\n                md={8}\n                sm={12}\n                xs={12}\n                className={Styles.descriptionText + \" \" + Styles.text14}\n              >\n                <span className={Styles.signInOptionSeperator}>OR</span>\n              </Col>\n              <Col lg={8} md={8} sm={12} xs={12}>\n                <Row align=\"center\">\n                  <Col col={12}>\n                    <Button round={true}>\n                      <Image\n                        source=\"assets/google.svg\"\n                        alt=\"logo\"\n                        className={Styles.signInIcon}\n                      />\n                    </Button>\n                    <Button round={true}>\n                      <Image\n                        source=\"assets/facebook.svg\"\n                        alt=\"logo\"\n                        className={Styles.signInIcon}\n                      />\n                    </Button>\n                    <Button round={true}>\n                      <Image\n                        source=\"assets/twitter.svg\"\n                        alt=\"logo\"\n                        className={Styles.signInIcon}\n                      />\n                    </Button>\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n          </CardFooter>\n          {/* end of card footer */}\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Component;\n","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/Register/Register.tsx",["281"],"import React, { useState } from \"react\";\nimport Button from \"ui-kit/Button/Botton\";\nimport { Card, CardHeader, CardBody, CardFooter } from \"ui-kit/Card\";\nimport Col from \"ui-kit/Col\";\nimport Image from \"ui-kit/Image/Image\";\nimport Row from \"ui-kit/Row\";\nimport Space from \"ui-kit/Space\";\nimport TextInput from \"ui-kit/TextInput/TextInput\";\nimport Link from \"ui-kit/Link\";\nimport Styles from \"./Register.module.scss\";\nimport { ApiValidationError } from \"api/errors/api-validation\";\nimport { IAction, IInitializedState } from \"types/storeActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AuthProfile from \"api/profile/AuthProfile\";\nimport { storeUser } from \"store/actions\";\nconst Component: React.FC = () => {\n  const dispatch = useDispatch();\n  const sparow = useSelector((state: IInitializedState) => state.sparow);\n\n  const [username, set_username] = useState<string>(\"\");\n  const [email, set_email] = useState<string>(\"\");\n  const [phone, set_phone] = useState<string>(\"\");\n  const [password, set_password] = useState<string>(\"\");\n  const [errors, set_errors] = useState<{ [key: string]: string[] }>({});\n  const [loading, set_loading] = useState<boolean>(false);\n\n  const submit = async () => {\n    set_errors({});\n    try {\n      set_loading(true);\n      const result: AuthProfile = await sparow.registerPlain({\n        username,\n        email,\n        phone,\n        password,\n        scopes: [\"applications\"],\n      });\n      dispatch(storeUser(result));\n      set_loading(false);\n    } catch (error) {\n      set_loading(false);\n      if (error instanceof ApiValidationError) {\n        set_errors(error.errors);\n      }\n    }\n  };\n  return (\n    <Row align=\"center\" verticalAlign=\"center\">\n      <Col lg={4} md={6} sm={8} xs={12}>\n        <Space height=\"45px\" />\n        <Card>\n          {/* start of card header */}\n          <CardHeader>\n            <Row align=\"center\">\n              <Col col={12}>\n                <Image\n                  source=\"/assets/sparrow-logo.png\"\n                  alt=\"logo\"\n                  className={Styles.logoImage}\n                />\n              </Col>\n              <Col col={12} className={Styles.logoText}>\n                sparow\n              </Col>\n              <Col col={12} className={Styles.descriptionText}>\n                register to access your information\n              </Col>\n            </Row>\n          </CardHeader>\n          {/* end of card header */}\n\n          {/* start of card body */}\n          <CardBody>\n            <Row align=\"start\">\n              <Col col={12}>\n                <TextInput\n                  value={username}\n                  onChange={set_username}\n                  label=\"Username\"\n                  type=\"text\"\n                  errors={errors?.username}\n                />\n              </Col>\n              <Col col={12}>\n                <TextInput\n                  value={email}\n                  onChange={set_email}\n                  label=\"Email\"\n                  type=\"email\"\n                  errors={errors?.email}\n                />\n              </Col>\n              <Col col={12}>\n                <TextInput\n                  value={phone}\n                  onChange={set_phone}\n                  label=\"Phone Number\"\n                  type=\"text\"\n                  errors={errors?.phone}\n                />\n              </Col>\n              <Col col={12}>\n                <TextInput\n                  value={password}\n                  onChange={set_password}\n                  label=\"Password\"\n                  type=\"password\"\n                  errors={errors?.password}\n                />\n              </Col>\n              <Col className={Styles.mt25} col={12}>\n                <Button onClick={submit} fullWidth={true} loading={loading}>\n                  Register\n                </Button>\n              </Col>\n              <Col\n                col={12}\n                className={\n                  Styles.descriptionText +\n                  \" \" +\n                  Styles.text14 +\n                  \" \" +\n                  Styles.textCenter\n                }\n              >\n                Already have An Account?{\" \"}\n                <Link\n                  style={{\n                    fontWeight: \"bold\",\n                  }}\n                  url={\"#\"}\n                >\n                  Sign In\n                </Link>\n              </Col>\n            </Row>\n          </CardBody>\n          {/* end of card body */}\n          {/* start of card footer */}\n          <CardFooter>\n            <Row align=\"center\">\n              <Col\n                lg={8}\n                md={8}\n                sm={12}\n                xs={12}\n                className={Styles.descriptionText + \" \" + Styles.text14}\n              >\n                <span className={Styles.signInOptionSeperator}>OR</span>\n              </Col>\n              <Col lg={8} md={8} sm={12} xs={12}>\n                <Row align=\"center\">\n                  <Col col={12}>\n                    <Button round={true}>\n                      <Image\n                        source=\"assets/google.svg\"\n                        alt=\"logo\"\n                        className={Styles.signInIcon}\n                      />\n                    </Button>\n                    <Button round={true}>\n                      <Image\n                        source=\"assets/facebook.svg\"\n                        alt=\"logo\"\n                        className={Styles.signInIcon}\n                      />\n                    </Button>\n                    <Button round={true}>\n                      <Image\n                        source=\"assets/twitter.svg\"\n                        alt=\"logo\"\n                        className={Styles.signInIcon}\n                      />\n                    </Button>\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n          </CardFooter>\n          {/* end of card footer */}\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Component;\n","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/Layout/Layout.tsx",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/ResetPassword/ResetPassword.tsx",["282"],"import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { CardHeader, Card } from \"ui-kit/Card\";\nimport Col from \"ui-kit/Col\";\nimport Image from \"ui-kit/Image/Image\";\nimport Row from \"ui-kit/Row\";\nimport Space from \"ui-kit/Space\";\nimport ChangePasswordStep from \"./ChangePasswordStep\";\nimport { IResetPasswordParams } from \"./params.interface\";\nimport Styles from \"./ResetPassword.module.scss\";\nimport SendStep from \"./SendStep\";\nimport VerifyEmailState from \"./VerifyEmailState\";\nimport VerifyPhoneStep from \"./VerifyPhoneStep\";\nconst ResetPassword: React.FC = () => {\n  const [email, set_email] = useState<string>(\"\");\n  const [phone, set_phone] = useState<string>(\"\");\n  const [method, set_method] = useState<\"email\" | \"phone\">(\"email\");\n  const [step, set_step] = useState<\n    \"not_submitted\" | \"submitting\" | \"submitted\" | \"password_change\"\n  >(\"not_submitted\");\n  const submit = () => {\n    set_step(\"submitted\");\n  };\n  const [token, set_token] = useState<string>(\"\");\n  // check if user is redirected with a parameter\n  const paramToken = useParams<IResetPasswordParams>().token;\n  // const didMount = () => {\n  //   if (paramToken) {\n  //     // first we have to validate the token. but it's just a mock view\n  //     set_token(paramToken);\n  //     set_step(\"password_change\");\n  //   }\n  // };\n  // useEffect(didMount, [paramToken]);\n  return (\n    <Row align=\"center\" verticalAlign=\"center\">\n      <Col lg={4} md={6} sm={8} xs={12}>\n        <Space height=\"10vh\" />\n        <Row>\n          <Col lg={6} md={6} sm={6} xs={12}>\n            <Image\n              source=\"/logo192.png\"\n              alt=\"logo\"\n              className={Styles.applicationImage}\n            />\n          </Col>\n          <Col lg={6} md={6} sm={6} xs={12}>\n            <Image\n              source=\"/logo192.png\"\n              alt=\"logo\"\n              className={Styles.applicationImage}\n            />\n          </Col>\n          <Col lg={6} md={6} sm={6} xs={12}>\n            sparow\n          </Col>\n          <Col lg={6} md={6} sm={6} xs={12}>\n            application name\n          </Col>\n        </Row>\n        <Space height=\"5vh\" />\n        <Card>\n          <CardHeader>\n            <Row align=\"start\">\n              <Col\n                col={12}\n                style={{\n                  paddingLeft: 15,\n                }}\n              >\n                <h3>\n                  <b>Reset Password</b>\n                </h3>\n              </Col>\n            </Row>\n          </CardHeader>\n          {step === \"not_submitted\" && (\n            <SendStep\n              email={email}\n              set_email={(value) => {\n                set_email(value);\n              }}\n              phone={phone}\n              set_phone={(value) => {\n                set_phone(value);\n              }}\n              method={method}\n              set_method={(value) => {\n                set_method(value);\n              }}\n              submit={submit}\n            />\n          )}\n          {step === \"submitted\" && method === \"email\" && (\n            <VerifyEmailState email={email} />\n          )}\n          {step === \"submitted\" && method === \"phone\" && (\n            <VerifyPhoneStep\n              phone={phone}\n              goBack={() => {\n                set_step(\"not_submitted\");\n              }}\n              submited={(value) => {\n                set_token(value);\n                set_step(\"password_change\");\n              }}\n            />\n          )}\n          {step === \"password_change\" && <ChangePasswordStep token={token} />}\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default ResetPassword;\n","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/store/actions.ts",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/profile/Profile.ts",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/Sparow.ts",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/Main/Main.tsx",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/ResetPassword/SendStep.tsx",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/ResetPassword/ChangePasswordStep.tsx",["283"],"import React, { useState } from \"react\";\nimport Button from \"ui-kit/Button/Botton\";\nimport { CardBody, CardFooter } from \"ui-kit/Card\";\nimport Col from \"ui-kit/Col\";\nimport Row from \"ui-kit/Row\";\nimport TextInput from \"ui-kit/TextInput/TextInput\";\nimport { FaPen } from \"react-icons/fa\";\nimport { IChangePasswordStepProps } from \"./props.interface\";\nimport FinishStep from \"./FinishStep\";\nconst ChangePasswordStep: React.FC<IChangePasswordStepProps> = ({\n  token,\n}: IChangePasswordStepProps) => {\n  console.debug(token);\n  const [password, set_password] = useState<string>(\"\");\n  const [password_confirmation, set_password_confirmation] = useState<string>(\n    \"\"\n  );\n  const [submitting, set_submitting] = useState<\n    \"not_submitted\" | \"submitting\" | \"submitted\"\n  >(\"not_submitted\");\n  const [loading, set_loading] = useState<boolean>(false);\n\n  const submit = () => {\n    set_submitting(\"submitted\");\n  };\n\n  if (submitting === \"submitted\") return <FinishStep />;\n  else\n    return (\n      <>\n        <CardBody>\n          <Row align=\"start\">\n            <Col col={12} style={{ textAlign: \"justify\" }}>\n              <h4>done! now you can change your password.</h4>\n            </Col>\n          </Row>\n          <Row align=\"start\">\n            <Col col={12}>\n              <TextInput\n                value={password}\n                onChange={set_password}\n                label=\"password\"\n                icon={<FaPen />}\n                type=\"password\"\n              />\n            </Col>\n            <Col col={12}>\n              <TextInput\n                value={password_confirmation}\n                onChange={set_password_confirmation}\n                label=\"password confirmation\"\n                icon={<FaPen />}\n                type=\"password\"\n              />\n            </Col>\n          </Row>\n        </CardBody>\n        <CardFooter>\n          <Row style={{ marginTop: 15 }}>\n            <Col col={12}>\n              <Row align=\"end\">\n                <Button\n                  onClick={() => {\n                    submit();\n                  }}\n                  loading={loading}\n                >\n                  submit\n                </Button>\n              </Row>\n            </Col>\n          </Row>\n        </CardFooter>\n      </>\n    );\n};\n\nexport default ChangePasswordStep;\n","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/ResetPassword/VerifyEmailState.tsx",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/ResetPassword/VerifyPhoneStep.tsx",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/Layout/components/NavBar.tsx",["284","285"],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/BreadCrumb/BreadCrumb.tsx",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/logout.ts",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/login.ts",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/register.ts",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/profile/updateProfile.ts",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/profile/getProfile.ts",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/socket-handlers/profile.ts",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/applications/search.ts",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/applications/create.ts",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/applications/edit.ts",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/applications/delete.ts",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/sessions/removeAll.ts",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/sessions/remove.ts",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/sessions/all.ts",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/errors/api-validation.ts",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/errors/auth.ts",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/Card.tsx",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/Col.tsx",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/Space.tsx",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/Row.tsx",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/Link.tsx",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/Wrapper.tsx",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/Button/Botton.tsx",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/TextInput/TextInput.tsx",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/ResetPassword/FinishStep.tsx",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/Main/Components/UploadProfileModal/UpdateProfileModal.tsx",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/Layout/components/MobileMenu.tsx",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/errors/not-found.ts",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/utils.ts",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/errors/network.ts",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/profile/AuthProfile.ts",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/applications/Application.ts",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/api/sessions/Session.ts",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/Avatar/Avatar.tsx",["286","287"],"import React, { useRef, useState } from \"react\";\nimport Image from \"ui-kit/Image/Image\";\nimport Styles from \"./Avatar.module.scss\";\n\nconst Avatar: React.FC<IAvatarProps> = ({\n  caption,\n  size,\n  round,\n  src,\n  style,\n}: IAvatarProps) => {\n  let avatar_classes = `${Styles.avatar}`;\n  if (round) {\n    avatar_classes += ` ${Styles.round}`;\n  }\n\n  const summerized_caption = caption\n    .split(/[-_\\s]/)\n    .map((part) => part.charAt(0))\n    .join(\" \");\n  if (src) {\n    return (\n      <div className={avatar_classes} style={{ ...style, maxWidth: size }}>\n        <Image\n          className={`${Styles.avatarImage} ${Styles.round}`}\n          source={src}\n          style={{ maxWidth: size }}\n        />\n      </div>\n    );\n  }\n  return (\n    <div\n      className={avatar_classes}\n      style={{ width: size, height: size, ...style }}\n    >\n      {summerized_caption}\n    </div>\n  );\n};\nexport default Avatar;\n","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/Layout/components/Menubar.tsx",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/DropDown/DropDown.tsx",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/CheckInput.tsx",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/Modal/ModalHeader.tsx",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/Modal/Modal.tsx",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/Modal/ModalBody.tsx",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/Modal/ModalFooter.tsx",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/ImageInput/ImageInput.tsx",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/ImageInput/ImageUrlPreview.tsx",["288"],"import React, { useRef } from \"react\";\nimport Image from \"ui-kit/Image/Image\";\nimport Styles from \"./ImageInput.module.scss\";\n\nconst ImageUrlPreview: React.FC<IUrlPreviewProps> = ({\n  value,\n  onChange,\n  label,\n  disabled,\n  errors,\n}: IUrlPreviewProps) => {\n  const fileInput = useRef<HTMLInputElement>(null);\n  return (\n    <div\n      className={Styles.container}\n      onClick={() => {\n        if (fileInput.current) fileInput.current.click();\n      }}\n    >\n      <input\n        hidden\n        type=\"file\"\n        ref={fileInput}\n        onChange={(event) => {\n          if (event.target.files) {\n            if (event.target.files.length > 0) {\n              const file = event.target.files[0];\n              onChange(file);\n            }\n          }\n        }}\n      />\n      <div className={Styles.imageContainer}>\n        <Image className={Styles.image} source={value} />\n      </div>\n      <div className={Styles.input}>{label}</div>\n      <ul className={Styles.error}>\n        {(errors || []).map((error, key) => (\n          <li key={key}>{error}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default ImageUrlPreview;\n","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/ImageInput/ImageCrop.tsx",["289","290"],"import React, { useEffect, useRef, useState } from \"react\";\nimport Styles from \"./ImageInput.module.scss\";\nimport ReactCrop from \"react-image-crop\";\nimport \"react-image-crop/lib/ReactCrop.scss\";\nimport Image from \"ui-kit/Image/Image\";\n\nfunction getCroppedImg(\n  image: HTMLImageElement,\n  crop: ReactCrop.PercentCrop\n): Promise<File> {\n  if (\n    crop.x === undefined ||\n    crop.y === undefined ||\n    crop.width === undefined ||\n    crop.height === undefined\n  ) {\n    return new Promise((resolve, reject) => {\n      reject(\"invalid crop\");\n    });\n  }\n\n  const { x, y, width, height, aspect = 1 } = crop;\n  const canvas = document.createElement(\"canvas\");\n\n  const finalWidth = Math.floor((width * image.width) / 100);\n  const finalHeight = Math.floor(finalWidth * aspect);\n  canvas.width = finalWidth;\n  canvas.height = finalHeight;\n  const ctx = canvas.getContext(\"2d\");\n  if (!ctx) {\n    return new Promise((resolve, reject) => {\n      reject(\"canvas creation failed\");\n    });\n  }\n  console.log(finalWidth, finalHeight);\n  ctx.drawImage(\n    image,\n    Math.floor(x * image.width) / 100,\n    Math.floor(y * image.height) / 100,\n    finalWidth,\n    finalHeight,\n    0,\n    0,\n    finalWidth,\n    finalHeight\n  );\n\n  // As Base64 string\n  // const base64Image = canvas.toDataURL('image/jpeg');\n\n  // As a blob\n  return new Promise((resolve, reject) => {\n    const result = canvas.toDataURL(\"image/jpeg\", 100);\n\n    const arr = result.split(\",\");\n    if (arr.length < 2) {\n      return reject(\"invalid data url\");\n    }\n    const mimeParts = arr[0].match(/:(.*?);/);\n    if (!mimeParts) {\n      return reject(\"invalid mime\");\n    }\n    const mime = mimeParts[1];\n    const bstr = atob(arr[1]);\n    let n = bstr.length;\n    const u8arr = new Uint8Array(n);\n\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n\n    return resolve(new File([u8arr], \"image.jpeg\", { type: mime }));\n  });\n}\n\nconst ImageCrop: React.FC<IImagePreviewProps> = ({\n  value,\n  onChange,\n  label,\n  disabled,\n  errors,\n  onCropped = () => {\n    // do nothing\n  },\n  aspect,\n}: IImagePreviewProps) => {\n  const [crop, set_crop] = useState<ReactCrop.Crop>({ aspect });\n  const [image, set_image] = useState<string>();\n  const [cropped_by_image_load, set_cropped_by_image_load] = useState(false);\n  useEffect(() => {\n    set_image(URL.createObjectURL(value));\n  }, [value]);\n  const img = useRef<HTMLImageElement>(null);\n  const fileInput = useRef<HTMLInputElement>(null);\n  if (!image) return null;\n  return (\n    <div className={Styles.container}>\n      <div className={Styles.imageContainer}>\n        <Image source={image} ref={img} style={{ display: \"none\" }} />\n        <ReactCrop\n          src={image}\n          crop={crop}\n          onChange={async (newCrop, percentCrop) => {\n            if (\n              percentCrop.x === 0 &&\n              percentCrop.y === 0 &&\n              percentCrop.width === 0 &&\n              percentCrop.height === 0\n            )\n              return;\n            if (cropped_by_image_load) {\n              set_cropped_by_image_load(false);\n              return;\n            }\n            set_crop(newCrop);\n            if (img.current) {\n              try {\n                const result = await getCroppedImg(img.current, percentCrop);\n                onCropped(result);\n              } catch (error) {}\n            }\n          }}\n          onImageLoaded={async (data) => {\n            const length = data.width > data.height ? data.height : data.width;\n            const x = (data.width - length) / 2;\n            const y = (data.height - length) / 2;\n\n            set_crop({\n              width: length,\n              height: length,\n              x,\n              y,\n              aspect,\n              unit: \"px\",\n            });\n            set_cropped_by_image_load(true);\n            if (img.current) {\n              try {\n                const result = await getCroppedImg(img.current, {\n                  width: (length / data.width) * 100,\n                  height: (length / data.height) * 100,\n                  x: (x / data.width) * 100,\n                  y: (y / data.height) * 100,\n                  aspect,\n                });\n                onCropped(result);\n              } catch (error) {\n                console.log(error);\n              }\n            }\n            return false;\n          }}\n        />\n      </div>\n      <div\n        className={Styles.input}\n        onClick={() => {\n          if (fileInput.current) fileInput.current.click();\n        }}\n      >\n        {label}\n      </div>\n      <input\n        hidden\n        type=\"file\"\n        ref={fileInput}\n        onChange={(event) => {\n          if (event.target.files) {\n            if (event.target.files.length > 0) {\n              const file = event.target.files[0];\n              onChange(file);\n            }\n          }\n        }}\n      />\n      <ul className={Styles.error}>\n        {(errors || []).map((error, key) => (\n          <li key={key}>{error}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default ImageCrop;\n","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/Sessions/Sessions.tsx",["291","292"],"import React, { useEffect, useState } from \"react\";\nimport Col from \"ui-kit/Col\";\nimport Row from \"ui-kit/Row\";\nimport Wrapper from \"ui-kit/Wrapper\";\nimport { Card, CardBody } from \"ui-kit/Card\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ILoggedInState } from \"types/storeActions\";\nimport Sparow from \"api/Sparow\";\nimport Session from \"api/sessions/Session\";\nimport LoadingView from \"./components/LoadingView/LoadingView\";\nimport TableView from \"./components/TableView/TableView\";\nimport { updateSessions } from \"store/actions\";\nconst Sessions: React.FC = () => {\n  const dispatch = useDispatch();\n  const sparow: Sparow = useSelector((state: ILoggedInState) => state.sparow);\n  const page = useSelector(\n    (state: ILoggedInState) => state.sessions.current_page\n  );\n  const sessions = useSelector((state: ILoggedInState) => state.sessions.data);\n  const page_count = useSelector(\n    (state: ILoggedInState) => state.sessions.page_count\n  );\n  const [loading, set_loading] = useState<LoadingStatus>(\"not_loaded\");\n  const loadSessions = async () => {\n    try {\n      set_loading(\"loading\");\n      const results = await sparow.allSessions({\n        page,\n        pageSize: 10,\n      });\n      dispatch(\n        updateSessions({\n          data: results.data,\n          page_count: Math.ceil(results.meta.total / results.meta.per_page),\n        })\n      );\n      set_loading(\"loaded\");\n    } catch (error) {\n      console.log(error);\n      set_loading(\"error\");\n    }\n  };\n\n  useEffect(() => {\n    loadSessions();\n  }, [page]);\n  console.log(sessions);\n  return (\n    <Wrapper>\n      <Row align=\"center\" verticalAlign=\"center\">\n        <Col lg={10} md={10} sm={12} xs={12}>\n          <Card>\n            <CardBody>\n              {loading === \"not_loaded\" ? <LoadingView /> : null}\n              {loading === \"loading\" && sessions.length === 0 ? (\n                <LoadingView />\n              ) : null}\n              {loading === \"loaded\" ||\n              (sessions.length > 0 && loading === \"loading\") ? (\n                <TableView\n                  sessions={sessions}\n                  pageChanged={(current_page) => {\n                    dispatch(updateSessions({ current_page }));\n                  }}\n                  loading={loading}\n                />\n              ) : null}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Wrapper>\n  );\n};\n\nexport default Sessions;\n","/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/Table/Table.tsx",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/Sessions/components/LoadingView/LoadingView.tsx",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/containers/Sessions/components/TableView/TableView.tsx",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/Image/Image.tsx",[],"/home/mr-exception/Documents/Salimon/sparow-public-webapp/src/ui-kit/Pagination/Pagination.tsx",[],{"ruleId":"293","severity":1,"message":"294","line":21,"column":10,"nodeType":"295","messageId":"296","endLine":21,"endColumn":19},{"ruleId":"293","severity":1,"message":"297","line":14,"column":10,"nodeType":"295","messageId":"296","endLine":14,"endColumn":17},{"ruleId":"293","severity":1,"message":"297","line":12,"column":10,"nodeType":"295","messageId":"296","endLine":12,"endColumn":17},{"ruleId":"293","severity":1,"message":"298","line":26,"column":9,"nodeType":"295","messageId":"296","endLine":26,"endColumn":19},{"ruleId":"293","severity":1,"message":"299","line":21,"column":19,"nodeType":"295","messageId":"296","endLine":21,"endColumn":30},{"ruleId":"293","severity":1,"message":"300","line":1,"column":17,"nodeType":"295","messageId":"296","endLine":1,"endColumn":25},{"ruleId":"293","severity":1,"message":"301","line":12,"column":26,"nodeType":"295","messageId":"296","endLine":12,"endColumn":32},{"ruleId":"293","severity":1,"message":"302","line":1,"column":17,"nodeType":"295","messageId":"296","endLine":1,"endColumn":23},{"ruleId":"293","severity":1,"message":"300","line":1,"column":25,"nodeType":"295","messageId":"296","endLine":1,"endColumn":33},{"ruleId":"293","severity":1,"message":"303","line":9,"column":3,"nodeType":"295","messageId":"296","endLine":9,"endColumn":11},{"ruleId":"293","severity":1,"message":"304","line":22,"column":24,"nodeType":"295","messageId":"296","endLine":22,"endColumn":30},{"ruleId":"293","severity":1,"message":"303","line":80,"column":3,"nodeType":"295","messageId":"296","endLine":80,"endColumn":11},{"ruleId":"293","severity":1,"message":"305","line":9,"column":8,"nodeType":"295","messageId":"296","endLine":9,"endColumn":15},{"ruleId":"293","severity":1,"message":"306","line":20,"column":9,"nodeType":"295","messageId":"296","endLine":20,"endColumn":19},"@typescript-eslint/no-unused-vars","'AuthError' is defined but never used.","Identifier","unusedVar","'IAction' is defined but never used.","'paramToken' is assigned a value but never used.","'set_loading' is assigned a value but never used.","'useState' is defined but never used.","'IState' is defined but never used.","'useRef' is defined but never used.","'disabled' is defined but never used.","'height' is assigned a value but never used.","'Session' is defined but never used.","'page_count' is assigned a value but never used."]